# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: http://www.jhipster.tech/profiles/
# More information on configuration properties: http://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    enabled: true
  instance:
    appname: common
    instanceId: common:${spring.application.instance-id:${random.value}}

spring:
  application:
    name: common
  jackson:
    serialization.write_dates_as_timestamps: false
  cache:
    type: simple
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost
          zk-nodes: localhost
      bindings:
        output:
          destination: topic-jhipster
  data:
    mongodb:
      host: localhost
      port: 0
      database: apartments
    elasticsearch:
      cluster-name:
      cluster-nodes:
      properties:
        path:
          logs: build/elasticsearch/log
          data: build/elasticsearch/data
  mail:
    host: localhost
  messages:
    basename: i18n/messages
  mvc:
    favicon:
      enabled: false
  thymeleaf:
    mode: XHTML

liquibase:
  contexts: test

server:
  port: 10344
  address: localhost

info:
  project:
    version: #project.version#

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: http://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  async:
    core-pool-size: 1
    max-pool-size: 50
    queue-capacity: 10000
  # To test logstash appender
  logging:
    logstash:
      enabled: true
      host: localhost
      port: 5000
      queue-size: 512
  security:
    authentication:
      jwt:
        secret: e3927c0f193dcbd0f1222c1ecf01673b3d572226
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
    client-authorization:
      access-token-uri: http://uaa/oauth/token
      token-service-id: uaa
      client-id: internal
      client-secret: internal
  metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
    jmx.enabled: true
    logs: # Reports Dropwizard metrics in the logs
      enabled: true
      report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# http://www.jhipster.tech/common-application-properties/
# ===================================================================

application:

winged:
  oss:
    config:
      resources:
        - resource-name: store
          prefix: stores
          append-object-id: true
          storage-type: PRIVATE_RESOURCE
        - resource-name: apartment
          prefix: apartments
          append-object-id: true
          storage-type: PRIVATE_RESOURCE
        - resource-name: original-name
          prefix: original-name
          append-object-id: false
          keepOriginalFileName: true
          storage-type: PRIVATE_RESOURCE
    alioss:
      public-resource:
        end-point-internal: https://oss-cn-beijing.aliyuncs.com
        end-point-external: https://oss-cn-beijing.aliyuncs.com
        end-point-internal-domain: oss-cn-beijing.aliyuncs.com
        end-point-external-domain: oss-cn-beijing.aliyuncs.com
        access-key-id:
        access-key-secret:
        bucket-name:
        roleArn:
        endPointSTS: sts.cn-beijing.aliyuncs.com
        region: oss-cn-beijing
      private-resource:
        end-point-internal: https://oss-cn-beijing.aliyuncs.com
        end-point-external: https://oss-cn-beijing.aliyuncs.com
        end-point-internal-domain: oss-cn-beijing.aliyuncs.com
        end-point-external-domain: oss-cn-beijing.aliyuncs.com
        access-key-id:
        access-key-secret:
        bucket-name:
        roleArn:
        endPointSTS: sts.cn-beijing.aliyuncs.com
        region: oss-cn-beijing
    inspuross:
      public-resource:
        end-point-internal: https://oss.cn-north-3.inspurcloudoss.com
        end-point-external: https://oss.cn-north-3.inspurcloudoss.com
        end-point-internal-domain: oss-innet.cn-north-3.inspurcloudoss.com
        end-point-external-domain: oss.cn-north-3.inspurcloudoss.com
        access-key-id:
        access-key-secret:
        bucket-name:
      private-resource:
        end-point-internal: https://oss.cn-north-3.inspurcloudoss.com
        end-point-external: https://oss.cn-north-3.inspurcloudoss.com
        access-key-id:
        access-key-secret:
        bucket-name:
